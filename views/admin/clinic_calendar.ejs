<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Clinic Calendar</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="/css/admin.css" />
    <link rel="stylesheet" href="/css/calendar.css">
</head>

<body>
    <%- include("background.ejs") %>
        <h1>Clinic Availability <button id="go-back-btn"
                onclick="window.location.href='/admin/clinics/addSchedule/<%=clinic_id%>'"><span>← Go
                    Back</span></button></h1>
        
        <% if (locals.errors) { errors.forEach(e => { %>
        <div class="alert alert-danger" role="alert"><%= e %></div>
        <% })} %>

        <div id="controls">
            <button id="prevMonth">← Prev</button>
            <span id="monthYear"></span>
            <button id="nextMonth">Next →</button>
        </div>
        <div id="calendar-header"></div>
        <div id="calendar"></div>

        <script>
            const calendarEl = document.getElementById("calendar");
            const monthYearEl = document.getElementById("monthYear");
            const prevBtn = document.getElementById("prevMonth");
            const nextBtn = document.getElementById("nextMonth");

            let currentDate = new Date((new Date).toLocaleString("sv-SE", {timeZone: "Asia/Beirut"}));

            function renderDayNames() {
                const header = document.getElementById("calendar-header");
                header.innerHTML = '';
                const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
                days.forEach(day => {
                    const div = document.createElement("div");
                    div.textContent = day;
                    header.appendChild(div);
                });
            }

            function getMonthDateRange(date) {
                const start = new Date(date.getFullYear(), date.getMonth(), 1);
                const end = new Date(date.getFullYear(), date.getMonth() + 1, 0);
                return {
                    start: start.toLocaleDateString("sv-SE", { timeZone: "Asia/Beirut" }),
                    end: end.toLocaleDateString("sv-SE", { timeZone: "Asia/Beirut" })
                };
            }

            async function loadCalendar(date) {
                const daysArray = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];

                renderDayNames();


                calendarEl.innerHTML = "";
                const year = date.getFullYear();
                const month = date.getMonth();

                const { start, end } = getMonthDateRange(date);

                monthYearEl.textContent = `${date.toLocaleString('default', {
                    month: 'long',
                    timeZone: "Asia/Beirut"
                })} ${year}`;

                const res = await fetch(`/clinics/schedule?start=${start}&end=${end}&clinic_id=<%=clinic_id%>`);
                const schedule = await res.json();

                console.log(schedule);
                const scheduleMap = {};
                schedule.forEach(entry => {
                    scheduleMap[entry.date] = entry;
                });
                console.log(scheduleMap);
                const daysInMonth = new Date(year, month + 1, 0).getDate();
                const firstDayOfWeek = new Date(year, month, 1).getDay();


                for (let i = 0; i < firstDayOfWeek; i++) {
                    const emptyDiv = document.createElement("div");
                    calendarEl.appendChild(emptyDiv);
                }

                for (let day = 1; day <= daysInMonth; day++) {
                    const dateObj = new Date(year, month, day);
                    const dateStr = dateObj.toLocaleDateString("sv-SE", { timeZone: "Asia/Beirut" });

                    const div = document.createElement("div");
                    div.classList.add("day");

                    if (scheduleMap[dateStr]) {
                        const { opening_time, closing_time, clinic_id } = scheduleMap[dateStr];
                        div.classList.add("available");
                        div.setAttribute("data-link", `/admin/clinics/updateSchedule?clinic_id=${clinic_id}&date=${dateStr}`);
                        div.setAttribute("onclick", `updateCalendar(this)`);
                        div.innerHTML = `
        <strong><span class="weekday-mobile">${daysArray[dateObj.getDay()]}</span> ${day}</strong>
        <div class="day-info">${opening_time} - ${closing_time}</div>
      `;
                    } else {
                        div.innerHTML = `<strong><span class="weekday-mobile">${daysArray[dateObj.getDay()]}</span> ${day}</strong>`;
                    }

                    calendarEl.appendChild(div);
                }
            }

            prevBtn.addEventListener("click", () => {
                currentDate.setMonth(currentDate.getMonth() - 1);
                loadCalendar(currentDate);
            });

            nextBtn.addEventListener("click", () => {
                currentDate.setMonth(currentDate.getMonth() + 1);
                loadCalendar(currentDate);
            });



            document.addEventListener("DOMContentLoaded", () => {
                loadCalendar(currentDate);
            });

            function updateCalendar(e) {
                window.location.href = e.getAttribute("data-link");
            }

        </script>


</body>

</html>